---
name: Build and Push Application Image to AWS ECR
on:
  push:
    branches: [ main ]
jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          ref: ${{ github.repository }}
    - run: npm install
    - run: npm test  > test_results.txt 2>&1
    - run: npm  run build
    - name: Results
      if: always()
      run: |
        cat test_results.txt
        echo "RESULTS=$(cat test_results.txt | grep Tests:)" >> $GITHUB_ENV

   

    - name: Build and Push the Image to Amazon ECR Ontology Repo 
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ontology
        IMAGE_TAG: "v3"
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    - name: Update Kube config
      run: aws eks update-kubeconfig --name demo --region us-east-1

    # - name: Deploy our app to Kubernetes in AWS EKS cluster
    #   run: |
    #      kubectl apply -f deployment.yaml

    - uses: actions/checkout@v2
    - name: Run kubectl
      uses: nikosch86/github-action-eks-kubectl@main
      with:
         command: "apply -f deployment.yaml"
      env:
         EKS_CLUSTER: demo
          